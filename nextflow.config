docker.enabled = true
conda.enabled = true

/*
executor {
    cpus = 8
    memory = 16.GB
}
*/

/* process {
    withLabel: SuperHeavy {
        cpus = 2
        memory = 4.GB
    }
} */

params {
    // start from ... (latest step with non empty path is chosen as starting point)
    from_pod5 = "/mnt/c/Users/jamie/UAntwerpen/bioing/pod5_light"   // uses all .pod5 files in this directory
    from_fastq = null // uses all .fastq files in this directory
    from_clean_fastq = null   // uses all .fastq files in this directory
    from_tsv = null // uses this directory to combine outputs
    from_tidytacos = null // assumes all directories in this directory can be read using tidytacos::read_tidytacos()

    // general
    scripts_dir = "/mnt/c/Users/jamie/UAntwerpen/bioing/NanoporePipeline/scripts"
    
    // dorado
    dorado = "/mnt/c/Users/jamie/UAntwerpen/bioing/dorado-1.1.0-linux-x64/bin/dorado" // dorado binary file path
    dorado_model = "/mnt/c/Users/jamie/UAntwerpen/bioing/dna_r10.4.1_e8.2_400bps_hac@v5.2.0" // dorado model directory path
    dorado_kitname = "SQK-16S114-24" // kitname
    dorado_batchsize = 64 // dorado batchsize

    // filtering
    // filtlong
    filtlong = "/mnt/c/Users/jamie/UAntwerpen/bioing/filtlong/Filtlong/bin/filtlong"
    fl_min_length = 1000    // sequence minimum length
    fl_max_length = 2700    // sequence maximum length
    fl_min_mean_quality = 12    // sequence minimum mean quality
    fl_min_window_quality = 8   // sequence minimum window quality
    fl_window_size = 250    // size of window to consider quality of

    // chopper (in conda)
    chopper_cutoff = 10  // cutoff value is the minimum Q-score a base needs in order to not be trimmed (chopper trims bad bases from both ends of a read)
    chopper_threadc = 4 // thread count

    // emu (in conda)
    emu_dbdir = "/mnt/c/Users/jamie/UAntwerpen/bioing/gtdb"
    emu_dbname = "GTDB_reps"
    emu_threadc = 10 // process thread count
    emu_gtdblink = "https://data.ace.uq.edu.au/public/gtdb/data/releases/latest" // gtdb latest link
    emu_gtdb_fnapath = "genomic_files_reps/bac120_ssu_reps.fna.gz" // .fna.gz for downloading
    emu_on_NoDBPresent = "auto" // options: abort, auto
                                // the above dbdir will be checked for a .fasta and .tsv file,
                                // if no such files are found this parameter is considered:
                                // on abort: the pipeline will assert a false statement and end
                                // on auto: the pipeline will attempt to get the latest gtdb release from the above link
                                // and create the missing files (and directories)
                                // THE PIPELINE WILL NEVER REMOVE FILES OR ACT ON A DIRECTORY THAT IS NOT EMPTY

    // tidytacos (R)
    r_site_libraries = "/mnt/c/Users/jamie/UAntwerpen/bioing/nanopore_pipeline/R_libs"
    tt_objname = "taco"

    //output
    outdir = "/mnt/c/Users/jamie/UAntwerpen/bioing/results" // base output directory
    // nested output directories
    dorado_fastq_out = "/fastq"
    prefiltering_qcreport_outdir = "/QC_PREFILT"
    postfiltering_qcreport_outdir = "/QC_POSTFILT"
    filtlong_dir = "/fastq_filtlong"
    chopper_dir = "/fastq_chopper"
    emu_dir = "/emu"
    tidytacos_qcdir = "/tacoqc"
    tidytacos_outdir = "/taco"
}
